{
  "root": true,
  "env": {
    "browser": true,
    "es2021": true,
    "node": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:react/recommended",
    "prettier",
    "next/core-web-vitals",
    "plugin:tailwindcss/recommended",
    "plugin:import/recommended",
    "plugin:prettier/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    },
    "project": "./tsconfig.json"
  },
  "plugins": [
    "react",
    "unused-imports",
    "prettier",
    "@typescript-eslint",
    "@typescript-eslint",
    "simple-import-sort",
    "tailwindcss"
  ],
  "rules": {
    // imports
    "tailwindcss/classnames-order": "off",
    "tailwindcss/no-custom-classname": "off",
    "prettier/prettier": [
      "error",
      {
        "endOfLine": "auto"
      }
    ],
    "no-unused-vars": "off",
    "unused-imports/no-unused-imports": "error",
    "unused-imports/no-unused-vars": [
      "warn",
      {
        "vars": "all",
        "varsIgnorePattern": "^_",
        "args": "after-used",
        "argsIgnorePattern": "^_"
      }
    ],
    "linebreak-style": "off",
    "semi": "off",
    "quotes": [0, "single"],
    "jsx-quotes": [2, "prefer-single"],
    "object-curly-spacing": ["error", "always"],
    "array-bracket-spacing": "off",
    "operator-linebreak": [
      "error",
      "after",
      {
        "overrides": {
          "?": "ignore",
          ":": "ignore"
        }
      }
    ],
    "import/prefer-default-export": 0,
    "react/jsx-props-no-spreading": 0,
    "react/jsx-curly-spacing": 0,
    "react-hooks/exhaustive-deps": 0,
    "comma-dangle": "off",
    "comma-spacing": [
      1,
      {
        "before": false,
        "after": true
      }
    ],
    "@typescript-eslint/naming-convention": [
      "off",
      {
        "selector": "variable",
        "types": ["boolean"],
        "format": ["camelCase"]
        //        "custom": {
        //          "regex": "^(is|are|has|was|should|can)",
        //          "match": true
        //        }
      },
      {
        "selector": "property",
        "types": ["boolean"],
        "format": ["camelCase"]
      }
    ],
    "no-undef": "off"
  }
}
